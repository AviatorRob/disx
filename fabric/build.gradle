plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
    include 'com.alibaba:fastjson:1.2.83'
    include 'com.fasterxml.jackson.core:jackson-annotations:2.15.3'
    include 'com.fasterxml.jackson.core:jackson-core:2.15.3'
    include 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    include 'com.github.walkyst.JAADec-fork:jaadec-ext-aac:0.1.3'
    /*include 'com.github.walkyst:lavaplayer-fork:1.4.3'
    include 'com.github.walkyst.lavaplayer-fork:lava-common:1.4.3'
    include 'com.github.walkyst.lavaplayer-fork:lavaplayer:1.4.3'
    include 'com.github.walkyst.lavaplayer-fork:lavaplayer-ext-format-xm:1.4.3'
    include 'com.github.walkyst.lavaplayer-fork:lavaplayer-ext-youtube-rotator:1.4.3'
    include 'com.github.walkyst.lavaplayer-fork:lavaplayer-stream-merger:1.4.3'
    include 'com.github.walkyst.lavaplayer-fork:lavaplayer-test-samples:1.4.3'
    include 'com.github.walkyst:ibxm-fork:a75'
    include 'com.github.walkyst:lavaplayer-natives-fork:1.0.2'
    */
    include group: 'org.json', name: 'json', version: '+'
    include group: 'com.github.sealedtx', name: 'java-youtube-downloader', version: '+'
    include 'org.junit.jupiter:junit-jupiter:+'
    include 'org.junit.jupiter:junit-jupiter-api:+'
    include 'org.junit.jupiter:junit-jupiter-engine:+'
    include 'org.junit.jupiter:junit-jupiter-params:+'
    include 'org.junit.platform:junit-platform-commons:+'
    include 'org.junit.platform:junit-platform-engine:+'
    //include 'org.mozilla:rhino:+'
    //include 'org.mozilla:rhino-engine:+'
    include 'org.opentest4j:opentest4j:+'
    //include 'com.github.aikaterna:lavaplayer-natives:original-SNAPSHOT'
    //include "dev.arbjerg:lavaplayer:2.1.2"
    include group: 'org.jsoup', name: 'jsoup', version: '+'
    //include "dev.lavalink.youtube:common:1.2.0"

    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rootProject.fabric_REI_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
    mergeServiceFiles()
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = null
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
